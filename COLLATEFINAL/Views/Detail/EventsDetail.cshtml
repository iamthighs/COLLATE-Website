@model EventsModel

@{
    ViewData["Title"] = "Events";
    ViewData["ActivePage"] = ManageSidebar.Events;
}

<style>


    * {
        box-sizing: border-box
    }

    /* Slideshow container */
    .slideshow-container {
        max-width: 1000px;
        position: relative;
        margin: auto;
    }

    /* Hide the images by default */
    .mySlides {
        display: none;
    }

    /* Next & previous buttons */
    .prev, .next {
        cursor: pointer;
        position: absolute;
        top: 50%;
        width: auto;
        margin-top: -22px;
        padding: 16px;
        color: white;
        font-weight: bold;
        font-size: 18px;
        transition: 0.6s ease;
        border-radius: 0 3px 3px 0;
        user-select: none;
    }

    /* Position the "next button" to the right */
    .next {
        right: 0;
        border-radius: 3px 0 0 3px;
    }

        /* On hover, add a black background color with a little bit see-through */
        .prev:hover, .next:hover {
            background-color: rgba(0,0,0,0.8);
        }

    /* Caption text */
    .text {
        color: #f2f2f2;
        font-size: 15px;
        padding: 8px 12px;
        position: absolute;
        bottom: 8px;
        width: 100%;
        text-align: center;
    }

    /* Number text (1/3 etc) */
    .numbertext {
        color: #f2f2f2;
        font-size: 12px;
        padding: 8px 12px;
        position: absolute;
        top: 0;
    }

    /* The dots/bullets/indicators */
    .dot {
        cursor: pointer;
        height: 10px;
        width: 10px;
        margin: 0 2px;
        background-color: #bbb;
        border-radius: 50%;
        display: inline-block;
        transition: background-color 0.6s ease;
    }



    /* Fading animation */
    .fade {
        animation-name: fade;
        animation-duration: 1.5s;
    }

</style>

<partial name="_NewNavbar" />
<div id="layoutSidenav">
    <partial name="_NewSidenav" />
    <div id="layoutSidenav_content">
        <main>
            <header class="py-10 mb-4 bg-img-cover overlay overlay-50 overlay-success" style="background-image: url('/Uploads/Events/@Model.ImageUrl')">
                <div class="container-xl px-4">
                    <div class="text-center z-1">
                        <h6 class="m-0 fw-bolder text-light text-center" style="font-size:3vw;">@Model.Title</h6>
                    </div>
                </div>
            </header>
            <!-- Main page content-->
            <div class="container-xl px-4">
                <div class="row">
                    <div class="col-12 card shadow mb-4">
                        <div class="row card-body text-justify">

                            <div class="col-xl-4 col-lg-5">
                                <img src="@Url.Content($"~/Uploads/Events/{Model.ImageUrl}")" class="img-fluid px-3 px-sm-4 mt-3 mb-4" style="width: 25rem;" />
                                <p class="text-center">
                                    Date: @Model.PostedDate.ToString("MMM dd, yyyy")
                                </p>


                                @if (Model.IsDone == true)
                                {
                                    <p class="text-center text-danger">This Event was already conducted. Registration is not available anymore.</p>
                                    
                                }
                                else
                                {
                                    <a class="btn btn-primary" asp-area="" asp-controller="Events" asp-action="RegisterForEvent" asp-route-id="@Model.Id">Register Here PUPian!</a>

                                }
                            </div>

                            <div class="col-xl-8 col-lg-7">
                                <div class="text-dark" style="text-indent:50px">
                                    @Html.Raw(Model.Content)
                                </div>

                            </div>
                            <div class="card-body">
                                @if (Model.IFrame == "none")
                                {
                                    <p class="text-center"><span class="badge bg-red-soft text-red">There's no available Video for this Event.</span></p>
                                }
                                else
                                {
                                    @Html.Raw(Model.IFrame)

                                    //<iframe class="col-12" height="480" src="" allow="autoplay" frameborder="1">
                                    //</iframe>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>

        </main>
        <partial name="_NewFooter" />
    </div>
</div>
<script>
    let slideIndex = 0;
    showSlides();

    // Next/previous controls
    function plusSlides(n) {
        showSlides(slideIndex += n);
    }

    // Thumbnail image controls
    function currentSlide(n) {
        showSlides(slideIndex = n);
    }

    function showSlides() {
        let i;
        let slides = document.getElementsByClassName("mySlides");
        for (i = 0; i < slides.length; i++) {
            slides[i].style.display = "none";
        }
        slideIndex++;
        if (slideIndex > slides.length) { slideIndex = 1 }
        slides[slideIndex - 1].style.display = "block";
        setTimeout(showSlides, 3000); // Change image every 2 seconds
    }
</script>





